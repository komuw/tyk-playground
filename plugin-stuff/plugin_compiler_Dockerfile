# Taken from:
# -https://github.com/TykTechnologies/tyk/tree/master/ci/images/plugin-compiler
# - https://github.com/TykTechnologies/custom-go-plugin

ARG BASE_IMAGE=tykio/golang-cross:1.19-bullseye
FROM ${BASE_IMAGE}

ARG GITHUB_SHA
ARG GITHUB_TAG
ENV GITHUB_SHA ${GITHUB_SHA}
ENV GITHUB_TAG ${GITHUB_TAG}

LABEL description="Image for plugin development"

ENV TYK_GW_PATH=/go/src/github.com/TykTechnologies/tyk

ENV GO111MODULE=on

# This directory will contain the plugin source and will be
# mounted from the host box by the user using docker volumes
ENV PLUGIN_SOURCE_PATH=/plugin-source

RUN mkdir -p $TYK_GW_PATH $PLUGIN_SOURCE_PATH

RUN apt-get remove -y --allow-remove-essential --auto-remove mercurial ruby* python* || true \
    && rm /usr/bin/passwd && rm /usr/sbin/adduser

WORKDIR $TYK_GW_PATH

# ADD go.mod go.mod $TYK_GW_PATH
# ADD . $TYK_GW_PATH
ADD "https://github.com/TykTechnologies/tyk/archive/refs/tags/${GITHUB_TAG}.zip" $TYK_GW_PATH

RUN unzip "${GITHUB_TAG}.zip" && \
    rm -rf "${GITHUB_TAG}.zip" && \
    cp -r tyk-*/* . && \
    mv tyk-* /tmp

RUN --mount=type=cache,mode=0755,target=/go/pkg/mod go mod download

# Provide a gateway test binary for testing plugin loading.
RUN --mount=type=cache,mode=0755,target=/go/pkg/mod GOBIN=/usr/local/bin go install -tags=goplugin -trimpath .

COPY data/build.sh /build.sh
RUN chmod +x /build.sh

ENTRYPOINT ["/build.sh"]
